# Imports:

from contextlib import contextmanager

from pyprover.tools import (
    props,
    terms,
)


# Base Class:

class Vars:
    @classmethod
    def items(cls):
        for name in dir(cls):
            if not name.startswith("_"):
                var = getattr(cls, name)
                yield name, var

    @classmethod
    def add_to(cls, globs):
        """Put variables into the global namespace."""
        for name, var in cls.items():
            globs[name] = var

    use = add_to

    @classmethod
    @contextmanager
    def use_in(cls, globs):
        """Temporarilty put variables into the global namespace."""
        prevars = {}
        for name, var in cls.items():
            if name in globs:
                prevars[name] = globs[name]
            globs[name] = var
        try:
            yield
        finally:
            for name, var in cls.items():
                if name in prevars:
                    globs[name] = prevars[name]
                else:
                    del globs[name]

    using = use_in

    def __hash__(self) -> int:
        return str(self) |> hash

    def __lt__(self, other) -> int:
        return str(self) < str(other)

    def __gt__(self, other) -> int:
        return str(self) > str(other)

    def __ge__(self, other) -> int:
        return str(self) >= str(other)

    def __le__(self, other) -> int:
        return str(self) <= str(other)


# Derived Classes:

class LowercasePropositions(Vars):
    a, b, c = props("a b c")
    d, e, f = props("d e f")
    g, h, i = props("g h i")
    j, k, l = props("j k l")
    m, n, o = props("m n o")
    p, q, r = props("p q r")
    s, t, u = props("s t u")
    v, w, x = props("v w x")
    y, z = props("y z")

class UppercasePropositions(Vars):
    A, B, C = props("A B C")
    D, E, F = props("D E F")
    G, H, I = props("G H I")
    J, K, L = props("J K L")
    M, N, O = props("M N O")
    P, Q, R = props("P Q R")
    S, T, U = props("S T U")
    V, W, X = props("V W X")
    Y, Z = props("Y Z")

class LowercaseVariables(Vars):
    a, b, c = terms("a b c")
    d, e, f = terms("d e f")
    g, h, i = terms("g h i")
    j, k, l = terms("j k l")
    m, n, o = terms("m n o")
    p, q, r = terms("p q r")
    s, t, u = terms("s t u")
    v, w, x = terms("v w x")
    y, z = terms("y z")

class UppercaseVariables(Vars):
    A, B, C = terms("A B C")
    D, E, F = terms("D E F")
    G, H, I = terms("G H I")
    J, K, L = terms("J K L")
    M, N, O = terms("M N O")
    P, Q, R = terms("P Q R")
    S, T, U = terms("S T U")
    V, W, X = terms("V W X")
    Y, Z = terms("Y Z")

class StandardMath(LowercaseVariables, UppercasePropositions)
